syntax = "proto3";

package user;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "v1/proto/user/entities.proto";

option go_package = "user;user";

// UserService provides user management functionality
service UserService {
  // CreateUser creates a new user account
  rpc CreateUser(CreateUserRequest) returns (User) {}
  
  // GetUser retrieves a user by ID
  rpc GetUser(GetUserRequest) returns (User) {}
  
  // UpdateUser updates an existing user's information
  rpc UpdateUser(UpdateUserRequest) returns (User) {}
  
  // DeleteUser marks a user account as deleted
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {}
  
  // ListUsers retrieves a paginated list of users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
  
  // AuthenticateUser validates user credentials and returns user info
  rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse) {}
  
  // ChangePassword allows users to update their password
  rpc ChangePassword(ChangePasswordRequest) returns (google.protobuf.Empty) {}
}

// CreateUserRequest contains the information needed to create a new user
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string display_name = 3;
  optional string avatar_url = 4;
  UserPreferences preferences = 5;
}

// GetUserRequest contains the ID of the user to retrieve
message GetUserRequest {
  string user_id = 1;
}

// UpdateUserRequest contains the fields that can be updated for a user
message UpdateUserRequest {
  string user_id = 1;
  optional string display_name = 2;
  optional string avatar_url = 3;
  optional UserPreferences preferences = 4;
}

// DeleteUserRequest contains the ID of the user to delete
message DeleteUserRequest {
  string user_id = 1;
}

// ListUsersRequest contains pagination parameters
message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
  optional string filter_by_status = 3;
}

// ListUsersResponse contains a page of users and pagination info
message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

// AuthenticateUserRequest contains login credentials
message AuthenticateUserRequest {
  string email = 1;
  string password = 2;
}

// AuthenticateUserResponse contains authentication result
message AuthenticateUserResponse {
  User user = 1;
  string access_token = 2;
  google.protobuf.Timestamp expires_at = 3;
}

// ChangePasswordRequest contains password change information
message ChangePasswordRequest {
  string user_id = 1;
  string current_password = 2;
  string new_password = 3;
}
