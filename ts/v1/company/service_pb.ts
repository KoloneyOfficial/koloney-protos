// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file v1/company/service.proto (package koloney.v1.company, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Company, CompanyIndustry, CompanySchema, CompanySize, CompanyStatus } from "./entities_pb";
import { file_v1_company_entities } from "./entities_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/company/service.proto.
 */
export const file_v1_company_service: GenFile = /*@__PURE__*/
  fileDesc("Chh2MS9jb21wYW55L3NlcnZpY2UucHJvdG8SEmtvbG9uZXkudjEuY29tcGFueSJJChRDcmVhdGVDb21wYW55UmVxdWVzdBIxCgdjb21wYW55GAEgASgLMhsua29sb25leS52MS5jb21wYW55LkNvbXBhbnlCA+BBAiImChFHZXRDb21wYW55UmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQIiegoUVXBkYXRlQ29tcGFueVJlcXVlc3QSMQoHY29tcGFueRgBIAEoCzIbLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55QgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIikKFERlbGV0ZUNvbXBhbnlSZXF1ZXN0EhEKBG5hbWUYASABKAlCA+BBAiKqAgoUTGlzdENvbXBhbmllc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBhZ2VfdG9rZW4YAiABKAkSOgoIaW5kdXN0cnkYAyABKA4yIy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueUluZHVzdHJ5SACIAQESMgoEc2l6ZRgEIAEoDjIfLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55U2l6ZUgBiAEBEjYKBnN0YXR1cxgFIAEoDjIhLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55U3RhdHVzSAKIAQESFQoIbG9jYXRpb24YBiABKAlIA4gBAUILCglfaW5kdXN0cnlCBwoFX3NpemVCCQoHX3N0YXR1c0ILCglfbG9jYXRpb24idAoVTGlzdENvbXBhbmllc1Jlc3BvbnNlEi4KCWNvbXBhbmllcxgBIAMoCzIbLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRISCgp0b3RhbF9zaXplGAMgASgFIv0BChZTZWFyY2hDb21wYW5pZXNSZXF1ZXN0EhIKBXF1ZXJ5GAEgASgJQgPgQQISEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkSOgoIaW5kdXN0cnkYBCABKA4yIy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueUluZHVzdHJ5SACIAQESMgoEc2l6ZRgFIAEoDjIfLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55U2l6ZUgBiAEBEhUKCGxvY2F0aW9uGAYgASgJSAKIAQFCCwoJX2luZHVzdHJ5QgcKBV9zaXplQgsKCV9sb2NhdGlvbiJ2ChdTZWFyY2hDb21wYW5pZXNSZXNwb25zZRIuCgljb21wYW5pZXMYASADKAsyGy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEgoKdG90YWxfc2l6ZRgDIAEoBSJPChpVcGRhdGVDb21wYW55U3RhdHVzUmVxdWVzdBIxCgdjb21wYW55GAEgASgLMhsua29sb25leS52MS5jb21wYW55LkNvbXBhbnlCA+BBAiJrChRWZXJpZnlDb21wYW55UmVxdWVzdBIRCgRuYW1lGAEgASgJQgPgQQISJgoZdmVyaWZpY2F0aW9uX2RvY3VtZW50X3VybBgCIAEoCUID4EECEhgKC3ZlcmlmaWVkX2J5GAMgASgJQgPgQQIynwgKDkNvbXBhbnlTZXJ2aWNlEnYKDUNyZWF0ZUNvbXBhbnkSKC5rb2xvbmV5LnYxLmNvbXBhbnkuQ3JlYXRlQ29tcGFueVJlcXVlc3QaGy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueSIegtPkkwIYOgdjb21wYW55Ig0vdjEvY29tcGFuaWVzEnAKCkdldENvbXBhbnkSJS5rb2xvbmV5LnYxLmNvbXBhbnkuR2V0Q29tcGFueVJlcXVlc3QaGy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueSIegtPkkwIYEhYvdjEve25hbWU9Y29tcGFuaWVzLyp9EocBCg1VcGRhdGVDb21wYW55Eigua29sb25leS52MS5jb21wYW55LlVwZGF0ZUNvbXBhbnlSZXF1ZXN0Ghsua29sb25leS52MS5jb21wYW55LkNvbXBhbnkiL4LT5JMCKToHY29tcGFueTIeL3YxL3tjb21wYW55Lm5hbWU9Y29tcGFuaWVzLyp9EnEKDURlbGV0ZUNvbXBhbnkSKC5rb2xvbmV5LnYxLmNvbXBhbnkuRGVsZXRlQ29tcGFueVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiHoLT5JMCGCoWL3YxL3tuYW1lPWNvbXBhbmllcy8qfRJ7Cg1MaXN0Q29tcGFuaWVzEigua29sb25leS52MS5jb21wYW55Lkxpc3RDb21wYW5pZXNSZXF1ZXN0Gikua29sb25leS52MS5jb21wYW55Lkxpc3RDb21wYW5pZXNSZXNwb25zZSIVgtPkkwIPEg0vdjEvY29tcGFuaWVzEogBCg9TZWFyY2hDb21wYW5pZXMSKi5rb2xvbmV5LnYxLmNvbXBhbnkuU2VhcmNoQ29tcGFuaWVzUmVxdWVzdBorLmtvbG9uZXkudjEuY29tcGFueS5TZWFyY2hDb21wYW5pZXNSZXNwb25zZSIcgtPkkwIWEhQvdjEvY29tcGFuaWVzOnNlYXJjaBKaAQoTVXBkYXRlQ29tcGFueVN0YXR1cxIuLmtvbG9uZXkudjEuY29tcGFueS5VcGRhdGVDb21wYW55U3RhdHVzUmVxdWVzdBobLmtvbG9uZXkudjEuY29tcGFueS5Db21wYW55IjaC0+STAjA6ASoyKy92MS97Y29tcGFueS5uYW1lPWNvbXBhbmllcy8qfTp1cGRhdGVTdGF0dXMSgAEKDVZlcmlmeUNvbXBhbnkSKC5rb2xvbmV5LnYxLmNvbXBhbnkuVmVyaWZ5Q29tcGFueVJlcXVlc3QaGy5rb2xvbmV5LnYxLmNvbXBhbnkuQ29tcGFueSIogtPkkwIiOgEqIh0vdjEve25hbWU9Y29tcGFuaWVzLyp9OnZlcmlmeUKxAQoWY29tLmtvbG9uZXkudjEuY29tcGFueUIMU2VydmljZVByb3RvUAFaH2tvbG9uZXktcHJvdG9zL2dvL3YxL3YxL2NvbXBhbnmiAgNLVkOqAhJLb2xvbmV5LlYxLkNvbXBhbnnKAhJLb2xvbmV5XFYxXENvbXBhbnniAh5Lb2xvbmV5XFYxXENvbXBhbnlcR1BCTWV0YWRhdGHqAhRLb2xvbmV5OjpWMTo6Q29tcGFueWIGcHJvdG8z", [file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_empty, file_google_protobuf_field_mask, file_v1_company_entities]);

/**
 * CreateCompanyRequest contains the information needed to create a new company.
 *
 * @generated from message koloney.v1.company.CreateCompanyRequest
 */
export type CreateCompanyRequest = Message<"koloney.v1.company.CreateCompanyRequest"> & {
  /**
   * The company resource to create.
   *
   * @generated from field: koloney.v1.company.Company company = 1;
   */
  company?: Company;
};

/**
 * Describes the message koloney.v1.company.CreateCompanyRequest.
 * Use `create(CreateCompanyRequestSchema)` to create a new message.
 */
export const CreateCompanyRequestSchema: GenMessage<CreateCompanyRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 0);

/**
 * GetCompanyRequest contains the name of the company to retrieve.
 *
 * @generated from message koloney.v1.company.GetCompanyRequest
 */
export type GetCompanyRequest = Message<"koloney.v1.company.GetCompanyRequest"> & {
  /**
   * The name of the company to retrieve.
   * Format: `companies/{company}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message koloney.v1.company.GetCompanyRequest.
 * Use `create(GetCompanyRequestSchema)` to create a new message.
 */
export const GetCompanyRequestSchema: GenMessage<GetCompanyRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 1);

/**
 * UpdateCompanyRequest contains the fields that can be updated for a company.
 *
 * @generated from message koloney.v1.company.UpdateCompanyRequest
 */
export type UpdateCompanyRequest = Message<"koloney.v1.company.UpdateCompanyRequest"> & {
  /**
   * The company resource which replaces the resource on the server.
   *
   * @generated from field: koloney.v1.company.Company company = 1;
   */
  company?: Company;

  /**
   * The list of fields to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message koloney.v1.company.UpdateCompanyRequest.
 * Use `create(UpdateCompanyRequestSchema)` to create a new message.
 */
export const UpdateCompanyRequestSchema: GenMessage<UpdateCompanyRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 2);

/**
 * DeleteCompanyRequest contains the name of the company to delete.
 *
 * @generated from message koloney.v1.company.DeleteCompanyRequest
 */
export type DeleteCompanyRequest = Message<"koloney.v1.company.DeleteCompanyRequest"> & {
  /**
   * The name of the company to delete.
   * Format: `companies/{company}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message koloney.v1.company.DeleteCompanyRequest.
 * Use `create(DeleteCompanyRequestSchema)` to create a new message.
 */
export const DeleteCompanyRequestSchema: GenMessage<DeleteCompanyRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 3);

/**
 * ListCompaniesRequest contains pagination and filtering parameters.
 *
 * @generated from message koloney.v1.company.ListCompaniesRequest
 */
export type ListCompaniesRequest = Message<"koloney.v1.company.ListCompaniesRequest"> & {
  /**
   * The maximum number of companies to return.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Filter companies by industry.
   *
   * @generated from field: optional koloney.v1.company.CompanyIndustry industry = 3;
   */
  industry?: CompanyIndustry;

  /**
   * Filter companies by size.
   *
   * @generated from field: optional koloney.v1.company.CompanySize size = 4;
   */
  size?: CompanySize;

  /**
   * Filter companies by status.
   *
   * @generated from field: optional koloney.v1.company.CompanyStatus status = 5;
   */
  status?: CompanyStatus;

  /**
   * Filter companies by location.
   *
   * @generated from field: optional string location = 6;
   */
  location?: string;
};

/**
 * Describes the message koloney.v1.company.ListCompaniesRequest.
 * Use `create(ListCompaniesRequestSchema)` to create a new message.
 */
export const ListCompaniesRequestSchema: GenMessage<ListCompaniesRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 4);

/**
 * ListCompaniesResponse contains a page of companies and pagination info.
 *
 * @generated from message koloney.v1.company.ListCompaniesResponse
 */
export type ListCompaniesResponse = Message<"koloney.v1.company.ListCompaniesResponse"> & {
  /**
   * The list of companies.
   *
   * @generated from field: repeated koloney.v1.company.Company companies = 1;
   */
  companies: Company[];

  /**
   * Token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The total number of companies matching the request.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message koloney.v1.company.ListCompaniesResponse.
 * Use `create(ListCompaniesResponseSchema)` to create a new message.
 */
export const ListCompaniesResponseSchema: GenMessage<ListCompaniesResponse> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 5);

/**
 * SearchCompaniesRequest contains search criteria.
 *
 * @generated from message koloney.v1.company.SearchCompaniesRequest
 */
export type SearchCompaniesRequest = Message<"koloney.v1.company.SearchCompaniesRequest"> & {
  /**
   * The search query.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The maximum number of companies to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous Search request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter companies by industry.
   *
   * @generated from field: optional koloney.v1.company.CompanyIndustry industry = 4;
   */
  industry?: CompanyIndustry;

  /**
   * Filter companies by size.
   *
   * @generated from field: optional koloney.v1.company.CompanySize size = 5;
   */
  size?: CompanySize;

  /**
   * Filter companies by location.
   *
   * @generated from field: optional string location = 6;
   */
  location?: string;
};

/**
 * Describes the message koloney.v1.company.SearchCompaniesRequest.
 * Use `create(SearchCompaniesRequestSchema)` to create a new message.
 */
export const SearchCompaniesRequestSchema: GenMessage<SearchCompaniesRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 6);

/**
 * SearchCompaniesResponse contains search results.
 *
 * @generated from message koloney.v1.company.SearchCompaniesResponse
 */
export type SearchCompaniesResponse = Message<"koloney.v1.company.SearchCompaniesResponse"> & {
  /**
   * The list of companies matching the search criteria.
   *
   * @generated from field: repeated koloney.v1.company.Company companies = 1;
   */
  companies: Company[];

  /**
   * Token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The total number of companies matching the search criteria.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message koloney.v1.company.SearchCompaniesResponse.
 * Use `create(SearchCompaniesResponseSchema)` to create a new message.
 */
export const SearchCompaniesResponseSchema: GenMessage<SearchCompaniesResponse> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 7);

/**
 * UpdateCompanyStatusRequest contains the new status for a company.
 *
 * @generated from message koloney.v1.company.UpdateCompanyStatusRequest
 */
export type UpdateCompanyStatusRequest = Message<"koloney.v1.company.UpdateCompanyStatusRequest"> & {
  /**
   * The company resource to update.
   *
   * @generated from field: koloney.v1.company.Company company = 1;
   */
  company?: Company;
};

/**
 * Describes the message koloney.v1.company.UpdateCompanyStatusRequest.
 * Use `create(UpdateCompanyStatusRequestSchema)` to create a new message.
 */
export const UpdateCompanyStatusRequestSchema: GenMessage<UpdateCompanyStatusRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 8);

/**
 * VerifyCompanyRequest contains verification information.
 *
 * @generated from message koloney.v1.company.VerifyCompanyRequest
 */
export type VerifyCompanyRequest = Message<"koloney.v1.company.VerifyCompanyRequest"> & {
  /**
   * The name of the company to verify.
   * Format: `companies/{company}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The URL to the verification document.
   *
   * @generated from field: string verification_document_url = 2;
   */
  verificationDocumentUrl: string;

  /**
   * The name of the person who verified the company.
   *
   * @generated from field: string verified_by = 3;
   */
  verifiedBy: string;
};

/**
 * Describes the message koloney.v1.company.VerifyCompanyRequest.
 * Use `create(VerifyCompanyRequestSchema)` to create a new message.
 */
export const VerifyCompanyRequestSchema: GenMessage<VerifyCompanyRequest> = /*@__PURE__*/
  messageDesc(file_v1_company_service, 9);

/**
 * CompanyService provides company management functionality.
 *
 * @generated from service koloney.v1.company.CompanyService
 */
export const CompanyService: GenService<{
  /**
   * CreateCompany creates a new company profile.
   *
   * @generated from rpc koloney.v1.company.CompanyService.CreateCompany
   */
  createCompany: {
    methodKind: "unary";
    input: typeof CreateCompanyRequestSchema;
    output: typeof CompanySchema;
  },
  /**
   * GetCompany retrieves a company by name.
   *
   * @generated from rpc koloney.v1.company.CompanyService.GetCompany
   */
  getCompany: {
    methodKind: "unary";
    input: typeof GetCompanyRequestSchema;
    output: typeof CompanySchema;
  },
  /**
   * UpdateCompany updates an existing company profile.
   *
   * @generated from rpc koloney.v1.company.CompanyService.UpdateCompany
   */
  updateCompany: {
    methodKind: "unary";
    input: typeof UpdateCompanyRequestSchema;
    output: typeof CompanySchema;
  },
  /**
   * DeleteCompany removes a company profile.
   *
   * @generated from rpc koloney.v1.company.CompanyService.DeleteCompany
   */
  deleteCompany: {
    methodKind: "unary";
    input: typeof DeleteCompanyRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * ListCompanies retrieves a paginated list of companies.
   *
   * @generated from rpc koloney.v1.company.CompanyService.ListCompanies
   */
  listCompanies: {
    methodKind: "unary";
    input: typeof ListCompaniesRequestSchema;
    output: typeof ListCompaniesResponseSchema;
  },
  /**
   * SearchCompanies searches for companies based on criteria.
   *
   * @generated from rpc koloney.v1.company.CompanyService.SearchCompanies
   */
  searchCompanies: {
    methodKind: "unary";
    input: typeof SearchCompaniesRequestSchema;
    output: typeof SearchCompaniesResponseSchema;
  },
  /**
   * UpdateCompanyStatus changes the status of a company.
   *
   * @generated from rpc koloney.v1.company.CompanyService.UpdateCompanyStatus
   */
  updateCompanyStatus: {
    methodKind: "unary";
    input: typeof UpdateCompanyStatusRequestSchema;
    output: typeof CompanySchema;
  },
  /**
   * VerifyCompany marks a company as verified.
   *
   * @generated from rpc koloney.v1.company.CompanyService.VerifyCompany
   */
  verifyCompany: {
    methodKind: "unary";
    input: typeof VerifyCompanyRequestSchema;
    output: typeof CompanySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_company_service, 0);

