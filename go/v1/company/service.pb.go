// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: v1/company/service.proto

package company

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "koloney-protos/go/v1/google/api"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCompanyRequest contains the information needed to create a new company.
type CreateCompanyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The company resource to create.
	Company       *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompanyRequest) Reset() {
	*x = CreateCompanyRequest{}
	mi := &file_v1_company_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyRequest) ProtoMessage() {}

func (x *CreateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

// GetCompanyRequest contains the name of the company to retrieve.
type GetCompanyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the company to retrieve.
	// Format: `companies/{company}`
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompanyRequest) Reset() {
	*x = GetCompanyRequest{}
	mi := &file_v1_company_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyRequest) ProtoMessage() {}

func (x *GetCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// UpdateCompanyRequest contains the fields that can be updated for a company.
type UpdateCompanyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The company resource which replaces the resource on the server.
	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCompanyRequest) Reset() {
	*x = UpdateCompanyRequest{}
	mi := &file_v1_company_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyRequest) ProtoMessage() {}

func (x *UpdateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *UpdateCompanyRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteCompanyRequest contains the name of the company to delete.
type DeleteCompanyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the company to delete.
	// Format: `companies/{company}`
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCompanyRequest) Reset() {
	*x = DeleteCompanyRequest{}
	mi := &file_v1_company_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyRequest) ProtoMessage() {}

func (x *DeleteCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListCompaniesRequest contains pagination and filtering parameters.
type ListCompaniesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of companies to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter companies by industry.
	Industry *CompanyIndustry `protobuf:"varint,3,opt,name=industry,proto3,enum=koloney.v1.company.CompanyIndustry,oneof" json:"industry,omitempty"`
	// Filter companies by size.
	Size *CompanySize `protobuf:"varint,4,opt,name=size,proto3,enum=koloney.v1.company.CompanySize,oneof" json:"size,omitempty"`
	// Filter companies by status.
	Status *CompanyStatus `protobuf:"varint,5,opt,name=status,proto3,enum=koloney.v1.company.CompanyStatus,oneof" json:"status,omitempty"`
	// Filter companies by location.
	Location      *string `protobuf:"bytes,6,opt,name=location,proto3,oneof" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompaniesRequest) Reset() {
	*x = ListCompaniesRequest{}
	mi := &file_v1_company_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesRequest) ProtoMessage() {}

func (x *ListCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesRequest.ProtoReflect.Descriptor instead.
func (*ListCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListCompaniesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCompaniesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCompaniesRequest) GetIndustry() CompanyIndustry {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return CompanyIndustry_COMPANY_INDUSTRY_UNSPECIFIED
}

func (x *ListCompaniesRequest) GetSize() CompanySize {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return CompanySize_COMPANY_SIZE_UNSPECIFIED
}

func (x *ListCompaniesRequest) GetStatus() CompanyStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return CompanyStatus_COMPANY_STATUS_UNSPECIFIED
}

func (x *ListCompaniesRequest) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

// ListCompaniesResponse contains a page of companies and pagination info.
type ListCompaniesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of companies.
	Companies []*Company `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
	// Token to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of companies matching the request.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompaniesResponse) Reset() {
	*x = ListCompaniesResponse{}
	mi := &file_v1_company_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesResponse) ProtoMessage() {}

func (x *ListCompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesResponse.ProtoReflect.Descriptor instead.
func (*ListCompaniesResponse) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListCompaniesResponse) GetCompanies() []*Company {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *ListCompaniesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListCompaniesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// SearchCompaniesRequest contains search criteria.
type SearchCompaniesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The search query.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The maximum number of companies to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous Search request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter companies by industry.
	Industry *CompanyIndustry `protobuf:"varint,4,opt,name=industry,proto3,enum=koloney.v1.company.CompanyIndustry,oneof" json:"industry,omitempty"`
	// Filter companies by size.
	Size *CompanySize `protobuf:"varint,5,opt,name=size,proto3,enum=koloney.v1.company.CompanySize,oneof" json:"size,omitempty"`
	// Filter companies by location.
	Location      *string `protobuf:"bytes,6,opt,name=location,proto3,oneof" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCompaniesRequest) Reset() {
	*x = SearchCompaniesRequest{}
	mi := &file_v1_company_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCompaniesRequest) ProtoMessage() {}

func (x *SearchCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCompaniesRequest.ProtoReflect.Descriptor instead.
func (*SearchCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchCompaniesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchCompaniesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchCompaniesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *SearchCompaniesRequest) GetIndustry() CompanyIndustry {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return CompanyIndustry_COMPANY_INDUSTRY_UNSPECIFIED
}

func (x *SearchCompaniesRequest) GetSize() CompanySize {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return CompanySize_COMPANY_SIZE_UNSPECIFIED
}

func (x *SearchCompaniesRequest) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

// SearchCompaniesResponse contains search results.
type SearchCompaniesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of companies matching the search criteria.
	Companies []*Company `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
	// Token to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of companies matching the search criteria.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCompaniesResponse) Reset() {
	*x = SearchCompaniesResponse{}
	mi := &file_v1_company_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCompaniesResponse) ProtoMessage() {}

func (x *SearchCompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCompaniesResponse.ProtoReflect.Descriptor instead.
func (*SearchCompaniesResponse) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{7}
}

func (x *SearchCompaniesResponse) GetCompanies() []*Company {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *SearchCompaniesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *SearchCompaniesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// UpdateCompanyStatusRequest contains the new status for a company.
type UpdateCompanyStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The company resource to update.
	Company       *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCompanyStatusRequest) Reset() {
	*x = UpdateCompanyStatusRequest{}
	mi := &file_v1_company_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCompanyStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyStatusRequest) ProtoMessage() {}

func (x *UpdateCompanyStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyStatusRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCompanyStatusRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

// VerifyCompanyRequest contains verification information.
type VerifyCompanyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the company to verify.
	// Format: `companies/{company}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The URL to the verification document.
	VerificationDocumentUrl string `protobuf:"bytes,2,opt,name=verification_document_url,json=verificationDocumentUrl,proto3" json:"verification_document_url,omitempty"`
	// The name of the person who verified the company.
	VerifiedBy    string `protobuf:"bytes,3,opt,name=verified_by,json=verifiedBy,proto3" json:"verified_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCompanyRequest) Reset() {
	*x = VerifyCompanyRequest{}
	mi := &file_v1_company_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCompanyRequest) ProtoMessage() {}

func (x *VerifyCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_company_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCompanyRequest.ProtoReflect.Descriptor instead.
func (*VerifyCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_company_service_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VerifyCompanyRequest) GetVerificationDocumentUrl() string {
	if x != nil {
		return x.VerificationDocumentUrl
	}
	return ""
}

func (x *VerifyCompanyRequest) GetVerifiedBy() string {
	if x != nil {
		return x.VerifiedBy
	}
	return ""
}

var File_v1_company_service_proto protoreflect.FileDescriptor

const file_v1_company_service_proto_rawDesc = "" +
	"\n" +
	"\x18v1/company/service.proto\x12\x12koloney.v1.company\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x19v1/company/entities.proto\"R\n" +
	"\x14CreateCompanyRequest\x12:\n" +
	"\acompany\x18\x01 \x01(\v2\x1b.koloney.v1.company.CompanyB\x03\xe0A\x02R\acompany\",\n" +
	"\x11GetCompanyRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"\x8f\x01\n" +
	"\x14UpdateCompanyRequest\x12:\n" +
	"\acompany\x18\x01 \x01(\v2\x1b.koloney.v1.company.CompanyB\x03\xe0A\x02R\acompany\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"/\n" +
	"\x14DeleteCompanyRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"\xe1\x02\n" +
	"\x14ListCompaniesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12D\n" +
	"\bindustry\x18\x03 \x01(\x0e2#.koloney.v1.company.CompanyIndustryH\x00R\bindustry\x88\x01\x01\x128\n" +
	"\x04size\x18\x04 \x01(\x0e2\x1f.koloney.v1.company.CompanySizeH\x01R\x04size\x88\x01\x01\x12>\n" +
	"\x06status\x18\x05 \x01(\x0e2!.koloney.v1.company.CompanyStatusH\x02R\x06status\x88\x01\x01\x12\x1f\n" +
	"\blocation\x18\x06 \x01(\tH\x03R\blocation\x88\x01\x01B\v\n" +
	"\t_industryB\a\n" +
	"\x05_sizeB\t\n" +
	"\a_statusB\v\n" +
	"\t_location\"\x99\x01\n" +
	"\x15ListCompaniesResponse\x129\n" +
	"\tcompanies\x18\x01 \x03(\v2\x1b.koloney.v1.company.CompanyR\tcompanies\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"\xb3\x02\n" +
	"\x16SearchCompaniesRequest\x12\x19\n" +
	"\x05query\x18\x01 \x01(\tB\x03\xe0A\x02R\x05query\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12D\n" +
	"\bindustry\x18\x04 \x01(\x0e2#.koloney.v1.company.CompanyIndustryH\x00R\bindustry\x88\x01\x01\x128\n" +
	"\x04size\x18\x05 \x01(\x0e2\x1f.koloney.v1.company.CompanySizeH\x01R\x04size\x88\x01\x01\x12\x1f\n" +
	"\blocation\x18\x06 \x01(\tH\x02R\blocation\x88\x01\x01B\v\n" +
	"\t_industryB\a\n" +
	"\x05_sizeB\v\n" +
	"\t_location\"\x9b\x01\n" +
	"\x17SearchCompaniesResponse\x129\n" +
	"\tcompanies\x18\x01 \x03(\v2\x1b.koloney.v1.company.CompanyR\tcompanies\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"X\n" +
	"\x1aUpdateCompanyStatusRequest\x12:\n" +
	"\acompany\x18\x01 \x01(\v2\x1b.koloney.v1.company.CompanyB\x03\xe0A\x02R\acompany\"\x96\x01\n" +
	"\x14VerifyCompanyRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\x12?\n" +
	"\x19verification_document_url\x18\x02 \x01(\tB\x03\xe0A\x02R\x17verificationDocumentUrl\x12$\n" +
	"\vverified_by\x18\x03 \x01(\tB\x03\xe0A\x02R\n" +
	"verifiedBy2\x9f\b\n" +
	"\x0eCompanyService\x12v\n" +
	"\rCreateCompany\x12(.koloney.v1.company.CreateCompanyRequest\x1a\x1b.koloney.v1.company.Company\"\x1e\x82\xd3\xe4\x93\x02\x18:\acompany\"\r/v1/companies\x12p\n" +
	"\n" +
	"GetCompany\x12%.koloney.v1.company.GetCompanyRequest\x1a\x1b.koloney.v1.company.Company\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/{name=companies/*}\x12\x87\x01\n" +
	"\rUpdateCompany\x12(.koloney.v1.company.UpdateCompanyRequest\x1a\x1b.koloney.v1.company.Company\"/\x82\xd3\xe4\x93\x02):\acompany2\x1e/v1/{company.name=companies/*}\x12q\n" +
	"\rDeleteCompany\x12(.koloney.v1.company.DeleteCompanyRequest\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/v1/{name=companies/*}\x12{\n" +
	"\rListCompanies\x12(.koloney.v1.company.ListCompaniesRequest\x1a).koloney.v1.company.ListCompaniesResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/companies\x12\x88\x01\n" +
	"\x0fSearchCompanies\x12*.koloney.v1.company.SearchCompaniesRequest\x1a+.koloney.v1.company.SearchCompaniesResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/companies:search\x12\x9a\x01\n" +
	"\x13UpdateCompanyStatus\x12..koloney.v1.company.UpdateCompanyStatusRequest\x1a\x1b.koloney.v1.company.Company\"6\x82\xd3\xe4\x93\x020:\x01*2+/v1/{company.name=companies/*}:updateStatus\x12\x80\x01\n" +
	"\rVerifyCompany\x12(.koloney.v1.company.VerifyCompanyRequest\x1a\x1b.koloney.v1.company.Company\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/{name=companies/*}:verifyB\xb1\x01\n" +
	"\x16com.koloney.v1.companyB\fServiceProtoP\x01Z\x1fkoloney-protos/go/v1/v1/company\xa2\x02\x03KVC\xaa\x02\x12Koloney.V1.Company\xca\x02\x12Koloney\\V1\\Company\xe2\x02\x1eKoloney\\V1\\Company\\GPBMetadata\xea\x02\x14Koloney::V1::Companyb\x06proto3"

var (
	file_v1_company_service_proto_rawDescOnce sync.Once
	file_v1_company_service_proto_rawDescData []byte
)

func file_v1_company_service_proto_rawDescGZIP() []byte {
	file_v1_company_service_proto_rawDescOnce.Do(func() {
		file_v1_company_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_company_service_proto_rawDesc), len(file_v1_company_service_proto_rawDesc)))
	})
	return file_v1_company_service_proto_rawDescData
}

var file_v1_company_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_company_service_proto_goTypes = []any{
	(*CreateCompanyRequest)(nil),       // 0: koloney.v1.company.CreateCompanyRequest
	(*GetCompanyRequest)(nil),          // 1: koloney.v1.company.GetCompanyRequest
	(*UpdateCompanyRequest)(nil),       // 2: koloney.v1.company.UpdateCompanyRequest
	(*DeleteCompanyRequest)(nil),       // 3: koloney.v1.company.DeleteCompanyRequest
	(*ListCompaniesRequest)(nil),       // 4: koloney.v1.company.ListCompaniesRequest
	(*ListCompaniesResponse)(nil),      // 5: koloney.v1.company.ListCompaniesResponse
	(*SearchCompaniesRequest)(nil),     // 6: koloney.v1.company.SearchCompaniesRequest
	(*SearchCompaniesResponse)(nil),    // 7: koloney.v1.company.SearchCompaniesResponse
	(*UpdateCompanyStatusRequest)(nil), // 8: koloney.v1.company.UpdateCompanyStatusRequest
	(*VerifyCompanyRequest)(nil),       // 9: koloney.v1.company.VerifyCompanyRequest
	(*Company)(nil),                    // 10: koloney.v1.company.Company
	(*fieldmaskpb.FieldMask)(nil),      // 11: google.protobuf.FieldMask
	(CompanyIndustry)(0),               // 12: koloney.v1.company.CompanyIndustry
	(CompanySize)(0),                   // 13: koloney.v1.company.CompanySize
	(CompanyStatus)(0),                 // 14: koloney.v1.company.CompanyStatus
	(*emptypb.Empty)(nil),              // 15: google.protobuf.Empty
}
var file_v1_company_service_proto_depIdxs = []int32{
	10, // 0: koloney.v1.company.CreateCompanyRequest.company:type_name -> koloney.v1.company.Company
	10, // 1: koloney.v1.company.UpdateCompanyRequest.company:type_name -> koloney.v1.company.Company
	11, // 2: koloney.v1.company.UpdateCompanyRequest.update_mask:type_name -> google.protobuf.FieldMask
	12, // 3: koloney.v1.company.ListCompaniesRequest.industry:type_name -> koloney.v1.company.CompanyIndustry
	13, // 4: koloney.v1.company.ListCompaniesRequest.size:type_name -> koloney.v1.company.CompanySize
	14, // 5: koloney.v1.company.ListCompaniesRequest.status:type_name -> koloney.v1.company.CompanyStatus
	10, // 6: koloney.v1.company.ListCompaniesResponse.companies:type_name -> koloney.v1.company.Company
	12, // 7: koloney.v1.company.SearchCompaniesRequest.industry:type_name -> koloney.v1.company.CompanyIndustry
	13, // 8: koloney.v1.company.SearchCompaniesRequest.size:type_name -> koloney.v1.company.CompanySize
	10, // 9: koloney.v1.company.SearchCompaniesResponse.companies:type_name -> koloney.v1.company.Company
	10, // 10: koloney.v1.company.UpdateCompanyStatusRequest.company:type_name -> koloney.v1.company.Company
	0,  // 11: koloney.v1.company.CompanyService.CreateCompany:input_type -> koloney.v1.company.CreateCompanyRequest
	1,  // 12: koloney.v1.company.CompanyService.GetCompany:input_type -> koloney.v1.company.GetCompanyRequest
	2,  // 13: koloney.v1.company.CompanyService.UpdateCompany:input_type -> koloney.v1.company.UpdateCompanyRequest
	3,  // 14: koloney.v1.company.CompanyService.DeleteCompany:input_type -> koloney.v1.company.DeleteCompanyRequest
	4,  // 15: koloney.v1.company.CompanyService.ListCompanies:input_type -> koloney.v1.company.ListCompaniesRequest
	6,  // 16: koloney.v1.company.CompanyService.SearchCompanies:input_type -> koloney.v1.company.SearchCompaniesRequest
	8,  // 17: koloney.v1.company.CompanyService.UpdateCompanyStatus:input_type -> koloney.v1.company.UpdateCompanyStatusRequest
	9,  // 18: koloney.v1.company.CompanyService.VerifyCompany:input_type -> koloney.v1.company.VerifyCompanyRequest
	10, // 19: koloney.v1.company.CompanyService.CreateCompany:output_type -> koloney.v1.company.Company
	10, // 20: koloney.v1.company.CompanyService.GetCompany:output_type -> koloney.v1.company.Company
	10, // 21: koloney.v1.company.CompanyService.UpdateCompany:output_type -> koloney.v1.company.Company
	15, // 22: koloney.v1.company.CompanyService.DeleteCompany:output_type -> google.protobuf.Empty
	5,  // 23: koloney.v1.company.CompanyService.ListCompanies:output_type -> koloney.v1.company.ListCompaniesResponse
	7,  // 24: koloney.v1.company.CompanyService.SearchCompanies:output_type -> koloney.v1.company.SearchCompaniesResponse
	10, // 25: koloney.v1.company.CompanyService.UpdateCompanyStatus:output_type -> koloney.v1.company.Company
	10, // 26: koloney.v1.company.CompanyService.VerifyCompany:output_type -> koloney.v1.company.Company
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v1_company_service_proto_init() }
func file_v1_company_service_proto_init() {
	if File_v1_company_service_proto != nil {
		return
	}
	file_v1_company_entities_proto_init()
	file_v1_company_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_v1_company_service_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_company_service_proto_rawDesc), len(file_v1_company_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_company_service_proto_goTypes,
		DependencyIndexes: file_v1_company_service_proto_depIdxs,
		MessageInfos:      file_v1_company_service_proto_msgTypes,
	}.Build()
	File_v1_company_service_proto = out.File
	file_v1_company_service_proto_goTypes = nil
	file_v1_company_service_proto_depIdxs = nil
}
